/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista;

import Modelo.Clientes.Cliente;
import Modelo.Producto.Productos;
import Modelo.Proveedores.Proveedor;
import clases.Ventas;
import clases.Pluses;
import clases.PlusesColab;
import com.itextpdf.kernel.colors.ColorConstants;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import controlador.ClienteControlador;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chrisp
 */
public class VentasView extends javax.swing.JDialog {

    // Objetos y Array List de otras clases. 
    Ventas ventas;
    Productos productos;
    Cliente cliente;
    Proveedor puestos;
    PlusesColab plusesColab;
    ArrayList<Cliente> listaCliente;
    ArrayList<Ventas> listaPlanilla;
    ArrayList<PlusesColab> listaPColab;
    ArrayList<Pluses> listaPluses;
    ArrayList<Productos> listaC;
    ArrayList<Proveedor> listaPuesto;
    ClienteControlador clienteController;
    private ClientesView vista;
    DefaultTableModel model;

    public VentasView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        vista = new ClientesView();
        clienteController = new ClienteControlador(vista);

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGenerar = new javax.swing.JPanel();
        btnGenerar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnbucarProducto = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCantVendida = new javax.swing.JTextField();
        bntBuscarCliente = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtCedCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pnlFiltrar = new javax.swing.JPanel();
        lblFiltrar = new javax.swing.JLabel();
        lblColaborador = new javax.swing.JLabel();
        chkFiltColab = new javax.swing.JCheckBox();
        chkFiltMes = new javax.swing.JCheckBox();
        lblMes = new javax.swing.JLabel();
        chkAño = new javax.swing.JCheckBox();
        lblAño = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnPDFTodo = new javax.swing.JButton();
        btnEliminarInforme = new javax.swing.JButton();
        btnPDFEspecifico = new javax.swing.JButton();
        pnlRegistrosPlanilla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlanilla = new javax.swing.JTable();
        lblCant = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Ventas ");
        setPreferredSize(new java.awt.Dimension(1000, 650));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        pnlGenerar.setBackground(new java.awt.Color(0, 51, 102));
        pnlGenerar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Registro de Ventas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        btnGenerar.setBackground(new java.awt.Color(255, 127, 0));
        btnGenerar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.setBorder(null);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar Producto:");

        btnbucarProducto.setBackground(new java.awt.Color(255, 127, 0));
        btnbucarProducto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnbucarProducto.setText("Buscar");
        btnbucarProducto.setBorder(null);
        btnbucarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbucarProductoActionPerformed(evt);
            }
        });

        txtCodigo.setEditable(false);
        txtCodigo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtPrecio.setEditable(false);
        txtPrecio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Código");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Precio");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cantidad Vendida:");

        txtCantVendida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        bntBuscarCliente.setBackground(new java.awt.Color(255, 127, 0));
        bntBuscarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bntBuscarCliente.setText("Buscar");
        bntBuscarCliente.setBorder(null);
        bntBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntBuscarClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Buscar Cliente:");

        txtNombreCliente.setEditable(false);
        txtNombreCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtCedCliente.setEditable(false);
        txtCedCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cédula:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre:");

        pnlFiltrar.setBackground(new java.awt.Color(255, 127, 0));

        lblFiltrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFiltrar.setText("Filtrar por:");

        lblColaborador.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblColaborador.setText("Colaborador:");

        lblMes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMes.setText("Mes: ");

        lblAño.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAño.setText("Año:");

        txtBuscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlFiltrarLayout = new javax.swing.GroupLayout(pnlFiltrar);
        pnlFiltrar.setLayout(pnlFiltrarLayout);
        pnlFiltrarLayout.setHorizontalGroup(
            pnlFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFiltrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkFiltColab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblColaborador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFiltMes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkAño)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblAño)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlFiltrarLayout.setVerticalGroup(
            pnlFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltrarLayout.createSequentialGroup()
                .addGroup(pnlFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFiltrarLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFiltrarLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnlFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chkFiltColab)
                            .addGroup(pnlFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblColaborador, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblFiltrar))
                            .addGroup(pnlFiltrarLayout.createSequentialGroup()
                                .addGroup(pnlFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkAño, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMes, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(1, 1, 1))
                            .addComponent(chkFiltMes)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFiltrarLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblAño)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        btnPDFTodo.setBackground(new java.awt.Color(255, 127, 0));
        btnPDFTodo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPDFTodo.setText("Generar PDF de todo el informe");
        btnPDFTodo.setBorder(null);
        btnPDFTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFTodoActionPerformed(evt);
            }
        });

        btnEliminarInforme.setBackground(new java.awt.Color(255, 127, 0));
        btnEliminarInforme.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminarInforme.setText("Eliminar");
        btnEliminarInforme.setBorder(null);
        btnEliminarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInformeActionPerformed(evt);
            }
        });

        btnPDFEspecifico.setBackground(new java.awt.Color(255, 127, 0));
        btnPDFEspecifico.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPDFEspecifico.setText("Generar PDF específico");
        btnPDFEspecifico.setBorder(null);
        btnPDFEspecifico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFEspecificoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlGenerarLayout = new javax.swing.GroupLayout(pnlGenerar);
        pnlGenerar.setLayout(pnlGenerarLayout);
        pnlGenerarLayout.setHorizontalGroup(
            pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerarLayout.createSequentialGroup()
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlGenerarLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtCantVendida))
                            .addGroup(pnlGenerarLayout.createSequentialGroup()
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))
                                .addGap(27, 27, 27)
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCedCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                    .addComponent(txtCodigo))
                                .addGap(18, 18, 18)
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(pnlGenerarLayout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnbucarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pnlGenerarLayout.createSequentialGroup()
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bntBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGenerarLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(pnlFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnPDFTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnPDFEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGenerarLayout.setVerticalGroup(
            pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGenerarLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addComponent(btnPDFTodo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPDFEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarInforme, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlGenerarLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(14, 14, 14)
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCedCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1)))
                                    .addComponent(jLabel2)))
                            .addGroup(pnlGenerarLayout.createSequentialGroup()
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(bntBuscarCliente))
                                .addGap(14, 14, 14)
                                .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlGenerarLayout.createSequentialGroup()
                                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(btnbucarProducto))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel3))))
                        .addGap(18, 18, 18)
                        .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCantVendida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(pnlGenerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlRegistrosPlanilla.setBackground(new java.awt.Color(255, 127, 0));
        pnlRegistrosPlanilla.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Ventas Registradas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tblPlanilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblPlanilla);

        javax.swing.GroupLayout pnlRegistrosPlanillaLayout = new javax.swing.GroupLayout(pnlRegistrosPlanilla);
        pnlRegistrosPlanilla.setLayout(pnlRegistrosPlanillaLayout);
        pnlRegistrosPlanillaLayout.setHorizontalGroup(
            pnlRegistrosPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 897, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlRegistrosPlanillaLayout.setVerticalGroup(
            pnlRegistrosPlanillaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lblCant.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCant.setText("Cantidad de Registros:");

        txtCant.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pnlGenerar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlRegistrosPlanilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRegistrosPlanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCant)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
//        if (!listaPlanilla.isEmpty()) {
//            btnPDFTodo.setVisible(true);
//            btnPDFEspecifico.setVisible(true);
//        }
//        PDFVision();
//        mostrarTabla();

    }//GEN-LAST:event_formWindowActivated

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        if (txtCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecciona un producto para realizar el informe", "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (txtCedCliente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecciona un cliente para realizar el informe", "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (txtCantVendida.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe ingresar la cantidad vendida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Convertir la cantidad vendida a entero
            int cantidadVendida = Integer.parseInt(txtCantVendida.getText());

            // Buscar el producto original en la lista de productos
            Productos productoOriginal = null;
            for (Productos p : listaC) {
                if (p.getCodigo() == Integer.parseInt(txtCodigo.getText())) {
                    productoOriginal = p;
                    break;
                }
            }

            // Validar que haya suficiente stock
            if (cantidadVendida > productoOriginal.getCantDisponible()) {
                JOptionPane.showMessageDialog(null,
                        "No hay suficiente stock. \nStock disponible: " + productoOriginal.getCantDisponible(),
                        "Stock Insuficiente",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Restar la cantidad vendida del stock original
            productoOriginal.setCantDisponible(productoOriginal.getCantDisponible() - cantidadVendida);

            // Crear un nuevo registro de planilla
            Ventas planilla = new Ventas();
            planilla.setCedulaEmpleado(Integer.parseInt(txtCedCliente.getText()));
            planilla.setNomEmpleado(txtNombreCliente.getText());
            planilla.setCodigoProducto(Integer.parseInt(txtCodigo.getText()));
            planilla.setNombreProducto(txtNombre.getText());
            planilla.setPrecioProducto(Integer.parseInt(txtPrecio.getText()));
            planilla.setCantVendidos(cantidadVendida);

            // Agregar a la lista de planilla
            listaPlanilla.add(planilla);

            // Actualizar la tabla
            mostrarTabla();

            // Limpiar campos
            txtCodigo.setText("");
            txtNombre.setText("");
            txtPrecio.setText("");
            txtCantVendida.setText("");
            txtCedCliente.setText("");
            txtNombreCliente.setText("");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "La cantidad vendida debe ser un número válido", "Error", JOptionPane.ERROR_MESSAGE);
        }

        btnPDFTodo.setVisible(true);
        btnPDFEspecifico.setVisible(true);
    }//GEN-LAST:event_btnGenerarActionPerformed

    /**
     * Obtiene el salario de un empleado según su puesto.
     *
     * @param idPuesto El ID del puesto del empleado.
     * @return El salario correspondiente al puesto, o 0 si no se encuentra el
     * puesto.
     */
    public float getSalarioEmpleado(int idPuesto) {
        for (int i = 0; i < listaPuesto.size(); i++) {
            puestos = listaPuesto.get(i);
            if (idPuesto == puestos.getId()) {
                return puestos.getId();

            }
        }
        return 0;
    }

    /**
     * Busca en la tabla de planillas según los filtros seleccionados.
     *
     * @param evt El evento de buscar por teclado.
     */

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
//        String titulos[] = {"Id Ventas", "Fecha Creación", "Mes a Pagar", "Fecha Pago", "Ced Empleado", "Empleado",
//            "Sal Base", "Total x Pluses", "Salario Bruto", "Deducc CCSS", "Deducción BP", "Salario Neto"};
//        model = new DefaultTableModel(null, titulos);
//
//        if (chkFiltColab.isSelected()) {
//            String textoBuscar = txtBuscar.getText();
//            int cedulaEmpleado = 0;
//            try {
//                cedulaEmpleado = Integer.parseInt(textoBuscar);
//            } catch (NumberFormatException e) {
//                JOptionPane.showMessageDialog(this, "El texto ingresado no es un número entero");
//                return;
//            }
//
//            for (int i = 0; i < listaPlanilla.size(); i++) {
//                planilla = listaPlanilla.get(i);
//                if (planilla.getCedulaEmpleado() == cedulaEmpleado) {
//                    Object nuevaFila[] = {planilla.getIdPlanilla(), planilla.getFechaRecibo(), planilla.getMesPuesto(),
//                        planilla.getFechaPago(), planilla.getCedulaEmpleado(), planilla.getNomEmpleado(),
//                        planilla.getSalBase(), planilla.getTotalPluses(), planilla.getSalBruto(),
//                        calcularSalarioBruto(), calcularDeduccionCCSS(),
//                        calcularDeduccionBP(), calcularSalarioNeto()};
//                    model.addRow(nuevaFila);
//                }
//            }
//            tblPlanilla.setModel(model);
//
//            txtCant.setText(String.valueOf(model.getRowCount()));
//
//        } else if (chkFiltMes.isSelected()) {
//            for (int i = 0; i < listaPlanilla.size(); i++) {
//                planilla = listaPlanilla.get(i);
//
//                if (planilla.getMesPuesto().equals(String.valueOf(txtBuscar.getText()))) {
//                    Object nuevaFila[] = {planilla.getIdPlanilla(), planilla.getFechaRecibo(), planilla.getMesPuesto(),
//                        planilla.getFechaPago(), planilla.getCedulaEmpleado(), planilla.getNomEmpleado(), planilla.getSalBase(),
//                        planilla.getTotalPluses(), planilla.getSalBruto(), planilla.getDeducCCSS(), planilla.getDeducBP(), planilla.getSalNeto()};
//                    model.addRow(nuevaFila);
//                }
//            }
//            tblPlanilla.setModel(model);
//
//            txtCant.setText(String.valueOf(model.getRowCount()));
//        } else if (chkAño.isSelected()) {
//            for (int i = 0; i < listaPlanilla.size(); i++) {
//                planilla = listaPlanilla.get(i);
//                if (planilla.getFechaPago().substring(6, 10).equals(txtBuscar.getText())) {
//                    Object nuevaFila[] = {planilla.getIdPlanilla(), planilla.getFechaRecibo(), planilla.getMesPuesto(),
//                        planilla.getFechaPago(), planilla.getCedulaEmpleado(), planilla.getNomEmpleado(), planilla.getSalBase(),
//                        planilla.getTotalPluses(), planilla.getSalBruto(), planilla.getDeducCCSS(), planilla.getDeducBP(), planilla.getSalNeto()};
//                    model.addRow(nuevaFila);
//                }
//            }
//            tblPlanilla.setModel(model);
//
//            txtCant.setText(String.valueOf(model.getRowCount()));
//        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void btnbucarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbucarProductoActionPerformed
        // Crear la vista de búsqueda de productos
        ProductosBuscaView view = new ProductosBuscaView(null, true);

        // Mostrar la vista
        view.setVisible(true);

        // Obtener el producto seleccionado
        Productos productoSeleccionado = view.getProductoSeleccionado();

        if (productoSeleccionado != null) {
            // Setear los valores en los campos de texto
            txtCodigo.setText(String.valueOf(productoSeleccionado.getCodigo()));
            txtNombre.setText(productoSeleccionado.getNombre());
            txtPrecio.setText(String.valueOf(productoSeleccionado.getPrecio()));
        }
    }//GEN-LAST:event_btnbucarProductoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnEliminarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInformeActionPerformed
        // Verificar si hay registros en la tabla
        if (listaPlanilla.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay registros para eliminar", "Lista Vacía", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

// Obtener la fila seleccionada
        int filaSeleccionada = tblPlanilla.getSelectedRow();

// Verificar si se ha seleccionado una fila
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro para eliminar", "Selección Requerida", JOptionPane.WARNING_MESSAGE);
            return;
        }

// Preguntar al usuario si realmente desea eliminar el registro seleccionado
        int respuesta = JOptionPane.showConfirmDialog(null,
                "¿Está seguro que desea eliminar el registro seleccionado?",
                "Confirmar Eliminación",
                JOptionPane.YES_NO_OPTION);

// Si el usuario confirma (respuesta == 0 significa que seleccionó "Sí")
        if (respuesta == 0) {
            // Eliminar el registro de la lista
            listaPlanilla.remove(filaSeleccionada);

            // Actualizar la tabla
            mostrarTabla();

            // Mostrar mensaje de confirmación
            JOptionPane.showMessageDialog(null, "El registro seleccionado ha sido eliminado", "Registro Eliminado", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarInformeActionPerformed

    private void btnPDFTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFTodoActionPerformed
        DefaultTableModel model = (DefaultTableModel) tblPlanilla.getModel();

        // Verifica si hay filas visibles
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No hay datos para exportar al PDF.");
            return;
        }

        // Ruta del PDF (escritorio)
        String rutaEscritorio = System.getProperty("user.home") + "/Desktop/";
        String nombreArchivo = "Informe_VentasCompleto_" + LocalDate.now() + ".pdf";
        String rutaCompleta = rutaEscritorio + nombreArchivo.replaceAll("[^a-zA-Z0-9._-]", "_");

        try {
            // Crear el PDF
            PdfWriter writer = new PdfWriter(rutaCompleta);
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);

            // Agregar título
            document.add(new Paragraph("Informe de Ventas")
                    .setBold()
                    .setFontSize(16)
                    .setMarginBottom(10));
            document.add(new Paragraph("Todas las ventas registradas")
                    .setFontSize(12)
                    .setMarginBottom(20));

            // Crear tabla en el PDF
            int columnCount = model.getColumnCount();
            float totalWidth = 520f; // Ancho total de la tabla en puntos
            float[] columnWidths = new float[columnCount];
            float defaultWidth = totalWidth / columnCount;

            for (int i = 0; i < columnCount; i++) {
                columnWidths[i] = Math.max(defaultWidth, model.getColumnName(i).length() * 6f); // Ajuste basado en texto
            }

            Table pdfTable = new Table(columnWidths);
            pdfTable.setWidth(totalWidth);

            // Agregar encabezados al PDF
            for (int i = 0; i < columnCount; i++) {
                Cell headerCell = new Cell().add(new Paragraph(model.getColumnName(i)))
                        .setBold()
                        .setTextAlignment(TextAlignment.CENTER)
                        .setBackgroundColor(ColorConstants.LIGHT_GRAY);
                pdfTable.addHeaderCell(headerCell);
            }

            // Agregar datos visibles de la tabla
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < columnCount; j++) {
                    String cellData = model.getValueAt(i, j) == null ? "" : model.getValueAt(i, j).toString();
                    Cell cell = new Cell().add(new Paragraph(cellData)
                            .setTextAlignment(TextAlignment.LEFT)
                            .setFontSize(10));
                    pdfTable.addCell(cell);
                }
            }

            // Agregar la tabla al documento
            document.add(pdfTable);

            // Cerrar documento
            document.close();

            // Confirmar éxito
            JOptionPane.showMessageDialog(this, "PDF generado exitosamente en: " + rutaCompleta);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al generar el PDF: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPDFTodoActionPerformed

    private void bntBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntBuscarClienteActionPerformed
        // Crear la vista de búsqueda
        ClienteBuscaView view = new ClienteBuscaView(null, true);

        // Mostrar la vista
        view.setVisible(true);

        // Obtener el cliente seleccionado
        Cliente clienteSeleccionado = view.getClienteSeleccionado();

        if (clienteSeleccionado != null) {
            // Setear los valores en los campos de texto
            txtCedCliente.setText(clienteSeleccionado.getCedula());
            txtNombreCliente.setText(clienteSeleccionado.getNombreCompleto());
        }

    }//GEN-LAST:event_bntBuscarClienteActionPerformed

    private void btnPDFEspecificoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFEspecificoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPDFEspecificoActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    public void mostrarTabla() {

        String titulos[] = {"Id Planilla", "Fecha Creación", "Cedula Cliente", "Cliente", "Código Producto", "producto",
            "Precio de Unidad", "CantVendida", "Subtotal", "Impuestos", "Total"};
        model = new DefaultTableModel(null, titulos);
        // Obtener el tamaño mínimo entre las listas

        for (int i = 0; i < listaPlanilla.size(); i++) {
            ventas = listaPlanilla.get(i);
            Object nuevaFila[] = {
                ventas.getIdPlanilla(), ventas.getFechaRecibo(), ventas.getCedulaEmpleado(), ventas.getNomEmpleado(),
                ventas.getCodigoProducto(), ventas.getNombreProducto(), ventas.getPrecioProducto(), ventas.getCantVendidos(),
                calcularSubTotal(), calcularImpuestos(), calcularTotal()};
            model.addRow(nuevaFila);

        }
        tblPlanilla.setModel(model);

        // Actualizar el contador de filas    
        txtCant.setText(String.valueOf(model.getRowCount()));
    }

    public int calcularSubTotal() {
        int precioOriginal = ventas.getPrecioProducto();
        int cantidadVendida = ventas.getCantVendidos();
        int resultado = precioOriginal * cantidadVendida;
        return resultado;
    }

    public int calcularImpuestos() {
        int impuestos = (int) (0.13 * calcularSubTotal());
        return impuestos;
    }

    public int calcularTotal() {
        int total = calcularSubTotal() + calcularImpuestos();
        return total;
    }

    public void PDFVision() {
        btnPDFEspecifico.setVisible(false);
        btnPDFTodo.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentasView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentasView dialog = new VentasView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntBuscarCliente;
    private javax.swing.JButton btnEliminarInforme;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnPDFEspecifico;
    private javax.swing.JButton btnPDFTodo;
    private javax.swing.JButton btnbucarProducto;
    private javax.swing.JCheckBox chkAño;
    private javax.swing.JCheckBox chkFiltColab;
    private javax.swing.JCheckBox chkFiltMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAño;
    private javax.swing.JLabel lblCant;
    private javax.swing.JLabel lblColaborador;
    private javax.swing.JLabel lblFiltrar;
    private javax.swing.JLabel lblMes;
    private javax.swing.JPanel pnlFiltrar;
    private javax.swing.JPanel pnlGenerar;
    private javax.swing.JPanel pnlRegistrosPlanilla;
    private javax.swing.JTable tblPlanilla;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCant;
    private javax.swing.JTextField txtCantVendida;
    private javax.swing.JTextField txtCedCliente;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
